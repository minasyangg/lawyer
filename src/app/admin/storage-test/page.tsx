'use client';

import { useState } from 'react';

export default function StorageTestPage() {
  const [testResults, setTestResults] = useState<{
    success: boolean;
    error?: string;
    result?: Record<string, unknown>;
    testType?: string;
    timestamp?: string;
  } | null>(null);
  const [loading, setLoading] = useState(false);
  const [storageProvider, setStorageProvider] = useState('local');

  const runTest = async (testType: string) => {
    setLoading(true);
    try {
      const response = await fetch(`/api/test-storage?type=${testType}`);
      const result = await response.json();
      setTestResults(result);
    } catch (error) {
      setTestResults({
        success: false,
        error: error instanceof Error ? error.message : 'Unknown error'
      });
    } finally {
      setLoading(false);
    }
  };

  const switchProvider = async () => {
    const newProvider = storageProvider === 'local' ? 'supabase' : 'local';
    
    try {
      // –°–Ω–∞—á–∞–ª–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫—ç—à –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞
      await fetch('/api/test-storage', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ action: 'reset-provider' })
      });
      
      setStorageProvider(newProvider);
      setTestResults(null);
      
      alert(`–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ ${newProvider} –ø—Ä–æ–≤–∞–π–¥–µ—Ä. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ STORAGE_PROVIDER.`);
    } catch (error) {
      console.error('Error switching provider:', error);
    }
  };

  return (
    <div className="container mx-auto p-8">
      <h1 className="text-3xl font-bold mb-8">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Ö—Ä–∞–Ω–µ–Ω–∏—è</h1>
      
      <div className="mb-6">
        <h2 className="text-xl font-semibold mb-4">–¢–µ–∫—É—â–∏–π –ø—Ä–æ–≤–∞–π–¥–µ—Ä: {storageProvider}</h2>
        <button
          onClick={switchProvider}
          className="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600"
        >
          –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ {storageProvider === 'local' ? 'Supabase' : 'Local'}
        </button>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
        <button
          onClick={() => runTest('connection')}
          disabled={loading}
          className="bg-green-500 text-white px-6 py-3 rounded hover:bg-green-600 disabled:opacity-50"
        >
          üîó –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
        </button>
        
        <button
          onClick={() => runTest('upload')}
          disabled={loading}
          className="bg-blue-500 text-white px-6 py-3 rounded hover:bg-blue-600 disabled:opacity-50"
        >
          üì§ –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
        </button>
        
        <button
          onClick={() => runTest('full')}
          disabled={loading}
          className="bg-purple-500 text-white px-6 py-3 rounded hover:bg-purple-600 disabled:opacity-50"
        >
          üöÄ –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç
        </button>
      </div>

      {loading && (
        <div className="text-center py-8">
          <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-gray-900"></div>
          <p className="mt-2">–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–µ—Å—Ç...</p>
        </div>
      )}

      {testResults && (
        <div className="bg-gray-50 rounded-lg p-6">
          <h3 className="text-lg font-semibold mb-4">
            {testResults.success ? '‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∞' : '‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞'}
          </h3>
          
          <pre className="bg-gray-800 text-green-400 p-4 rounded overflow-auto text-sm">
            {JSON.stringify(testResults, null, 2)}
          </pre>
        </div>
      )}

      <div className="mt-8 bg-blue-50 rounded-lg p-6">
        <h3 className="text-lg font-semibold mb-4">üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h3>
        <ul className="space-y-2 text-sm">
          <li><strong>–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</strong> –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è</li>
          <li><strong>–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏:</strong> –°–æ–∑–¥–∞–µ—Ç –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª</li>
          <li><strong>–ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç:</strong> –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏</li>
          <li><strong>–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞:</strong> –ò–∑–º–µ–Ω—è–µ—Ç STORAGE_PROVIDER –≤ .env.local</li>
        </ul>
      </div>
    </div>
  );
}
