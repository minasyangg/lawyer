"use client"

import { useState, useEffect } from 'react'
import { uploadFiles, getFilesList, deleteFile } from '@/app/actions/filemanager/files'
import { getFoldersList, createFolder } from '@/app/actions/filemanager/folders'
import { getUserFilePermissions } from '@/app/actions/filemanager/editor'
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { toast } from "sonner"
import { FileManagerFile, FileManagerFolder } from '@/lib/filemanager/types'

interface UserPermissions {
  canUpload: boolean
  canDelete: boolean
  canViewAll: boolean
  canManageFolders: boolean
  maxFileSize: number
  allowedTypes: string[]
}

export default function FileManagerTest() {
  const [files, setFiles] = useState<FileManagerFile[]>([])
  const [folders, setFolders] = useState<FileManagerFolder[]>([])
  const [permissions, setPermissions] = useState<UserPermissions | null>(null)
  const [loading, setLoading] = useState(false)
  const [newFolderName, setNewFolderName] = useState('')

  useEffect(() => {
    loadData()
  }, [])

  const loadData = async () => {
    setLoading(true)
    try {
      // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª—ã, –ø–∞–ø–∫–∏ –∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
      const [filesResult, foldersResult, permissionsResult] = await Promise.all([
        getFilesList(),
        getFoldersList(),
        getUserFilePermissions()
      ])

      if (filesResult.success) {
        setFiles(filesResult.files)
      } else {
        toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤: ' + filesResult.error)
      }

      if (foldersResult.success) {
        setFolders(foldersResult.folders)
      } else {
        toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–ø–æ–∫: ' + foldersResult.error)
      }

      if (permissionsResult.success) {
        setPermissions(permissionsResult.permissions)
      } else {
        toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π: ' + permissionsResult.error)
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö')
      console.error('Load data error:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {
    const uploadedFiles = event.target.files
    if (!uploadedFiles || uploadedFiles.length === 0) return

    const formData = new FormData()
    Array.from(uploadedFiles).forEach(file => {
      formData.append('files', file)
    })

    setLoading(true)
    try {
      const result = await uploadFiles(formData)
      
      if (result.success) {
        toast.success(`–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${result.files.length} —Ñ–∞–π–ª–æ–≤`)
        await loadData() // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      } else {
        toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ' + result.error)
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤')
      console.error('Upload error:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleDeleteFile = async (fileId: number) => {
    if (!confirm('–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª?')) return

    setLoading(true)
    try {
      const result = await deleteFile(fileId)
      
      if (result.success) {
        toast.success('–§–∞–π–ª —É–¥–∞–ª–µ–Ω')
        await loadData() // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      } else {
        toast.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + result.error)
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞')
      console.error('Delete error:', error)
    } finally {
      setLoading(false)
    }
  }

  const handleCreateFolder = async () => {
    if (!newFolderName.trim()) {
      toast.error('–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–∞–ø–∫–∏')
      return
    }

    setLoading(true)
    try {
      const result = await createFolder(newFolderName.trim())
      
      if (result.success) {
        toast.success('–ü–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞')
        setNewFolderName('')
        await loadData() // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
      } else {
        toast.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏: ' + result.error)
      }
    } catch (error) {
      toast.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏')
      console.error('Create folder error:', error)
    } finally {
      setLoading(false)
    }
  }

  if (loading && !files.length && !folders.length) {
    return (
      <div className="p-6">
        <div className="text-center">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
      </div>
    )
  }

  return (
    <div className="p-6 space-y-6">
      <h1 className="text-2xl font-bold">–¢–µ—Å—Ç —Ñ–∞–π–ª–æ–≤–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞</h1>
      
      {/* –†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
      {permissions && (
        <Card>
          <CardHeader>
            <CardTitle>–†–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</CardTitle>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-2 gap-2 text-sm">
              <div>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤: {permissions.canUpload ? '‚úÖ' : '‚ùå'}</div>
              <div>–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤: {permissions.canDelete ? '‚úÖ' : '‚ùå'}</div>
              <div>–ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤: {permissions.canViewAll ? '‚úÖ' : '‚ùå'}</div>
              <div>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–ø–∫–∞–º–∏: {permissions.canManageFolders ? '‚úÖ' : '‚ùå'}</div>
              <div>–ú–∞–∫—Å. —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {Math.round(permissions.maxFileSize / 1024 / 1024)}MB</div>
              <div>–†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã: {permissions.allowedTypes.length} —Ç–∏–ø–æ–≤</div>
            </div>
          </CardContent>
        </Card>
      )}

      {/* –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤ */}
      {permissions?.canUpload && (
        <Card>
          <CardHeader>
            <CardTitle>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤</CardTitle>
          </CardHeader>
          <CardContent>
            <Input
              type="file"
              multiple
              onChange={handleFileUpload}
              disabled={loading}
            />
          </CardContent>
        </Card>
      )}

      {/* –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ */}
      {permissions?.canManageFolders && (
        <Card>
          <CardHeader>
            <CardTitle>–°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏</CardTitle>
          </CardHeader>
          <CardContent className="flex gap-2">
            <Input
              value={newFolderName}
              onChange={(e) => setNewFolderName(e.target.value)}
              placeholder="–ò–º—è –ø–∞–ø–∫–∏"
              disabled={loading}
            />
            <Button onClick={handleCreateFolder} disabled={loading}>
              –°–æ–∑–¥–∞—Ç—å
            </Button>
          </CardContent>
        </Card>
      )}

      {/* –°–ø–∏—Å–æ–∫ –ø–∞–ø–æ–∫ */}
      <Card>
        <CardHeader>
          <CardTitle>–ü–∞–ø–∫–∏ ({folders.length})</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid gap-2">
            {folders.map((folder) => (
              <div key={folder.id} className="p-2 border rounded flex justify-between items-center">
                <div>
                  <div className="font-medium">üìÅ {folder.name}</div>
                  <div className="text-sm text-gray-500">{folder.path}</div>
                </div>
              </div>
            ))}
            {folders.length === 0 && (
              <div className="text-center text-gray-500 py-4">
                –ü–∞–ø–æ–∫ –Ω–µ—Ç
              </div>
            )}
          </div>
        </CardContent>
      </Card>

      {/* –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ */}
      <Card>
        <CardHeader>
          <CardTitle>–§–∞–π–ª—ã ({files.length})</CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid gap-2">
            {files.map((file) => (
              <div key={file.id} className="p-2 border rounded flex justify-between items-center">
                <div className="flex-1">
                  <div className="font-medium">{file.originalName}</div>
                  <div className="text-sm text-gray-500">
                    {file.mimeType} ‚Ä¢ {Math.round(file.size / 1024)}KB
                  </div>
                </div>
                {permissions?.canDelete && (
                  <Button 
                    variant="destructive" 
                    size="sm"
                    onClick={() => handleDeleteFile(file.id)}
                    disabled={loading}
                  >
                    –£–¥–∞–ª–∏—Ç—å
                  </Button>
                )}
              </div>
            ))}
            {files.length === 0 && (
              <div className="text-center text-gray-500 py-4">
                –§–∞–π–ª–æ–≤ –Ω–µ—Ç
              </div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  )
}